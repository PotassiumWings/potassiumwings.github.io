<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[2019.4-2019.5 TO-DO LIST]]></title>
    <url>%2F2019%2F03%2F30%2F2019.4-2019.5%20to-do%20list%2F</url>
    <content type="text"><![CDATA[做自己喜欢的事是自由，喜欢自己做的事是幸福。 由于3月剩下的时间便是复习以前的题目来完成题解集，估计不会有剩余时间开新坑了。提前备好上个月没有完成的任务。 数据结构LCTblog1blog2P3690 【模板】Link Cut Tree （动态树）P1600 天天爱跑步 线段树，树状数组P1972 [SDOI2009]HH的项链P3948 数据结构CF877E Danil and a Part-time Job 自动机P3809 【模板】后缀排序P3804 【模板】后缀自动机P2414 [NOI2011]阿狸的打字机 数论P4884 多少个1？BSGS和扩展BSGSP4861 按钮P3807 【模板】卢卡斯定理P4720 【模板】扩展卢卡斯P2044 [NOI2012]随机数生成器P4783 【模板】矩阵求逆P4781 【模板】拉格朗日插值P4213 【模板】杜教筛（Sum）P4718 【模板】Pollard-Rho算法群论P4980 【模板】Polya定理莫比乌斯反演 FFTP4238 【模板】多项式求逆P4199 万径人踪灭P2553 [AHOI2001]多项式乘法P4245 【模板】任意模数NTTP4239 【模板】多项式求逆（加强版）P4721 【模板】分治 FFTP4725 【模板】多项式对数函数P4726 【模板】多项式指数函数P4717 【模板】快速沃尔什变换P4723 【模板】线性递推 博弈论P2148 [SDOI2009]E&amp;DP3185 [HNOI2007]分裂游戏 旋转卡壳P3187 [HNOI2007]最小矩形覆盖P4166 [SCOI2007]最大土地面积 其他P1032 字串变换P1026 统计单词个数blog2P3943 星空AT2442 フェーン現象 (Foehn Phenomena)题解P3193 [HNOI2008]GT考试[HDU5592] ZYB’s PremutationP3806 【模板】点分治1 某些神奇的地方最短路+差分约束好博题解库洛谷日报LaTeX图论题画图处大佬]]></content>
      <tags>
        <tag>成长</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018.12-2019.1 TO-DO LIST 题解集]]></title>
    <url>%2F2019%2F03%2F11%2F2018.12-2019.1%20to-do%20list%20%E9%A2%98%E8%A7%A3%E9%9B%86%2F</url>
    <content type="text"><![CDATA[因为这只Potassium太摸了，需要写一点题解，以防做了的题白做。 AC自动机P3808 【模板】AC自动机（简单版）（完成时间：2018.12.06） 题目描述给定n个模式串和1个文本串，求有多少个模式串在文本串里出现过。 解题思路AC自动机模板题。那么我们首先考虑跑n次kmp 由于前n-1个字符串可以建一颗字典树，所以确实可以在树上跑kmp。但显然仅仅这样做时间复杂度会非常之高，如何解决这个问题呢？ 回想一下，在进行kmp字符串匹配的时候，我们通过一个p指向模式串，枚举文本串的第i个数。next（或者fail）数组存储的是，在当前节点后一位失配之后应当比较的位置的前一位，也就是next[i]表示了1~next[i]和i-next[i]-1~i这两段字符串完全匹配，在下一位失配的时候应当从继续。 举个例子，aababaababb。先给出其对应的next[i]值。 i 1 2 3 4 5 6 7 8 9 10 11 a[i] a a b a b a a b a b b next[i] 0 1 0 1 0 1 2 3 4 5 0 举个例子，i=8的时候，aababaab黑线标出的两段完全相等，用模式串比对到第九个如果失配可以直接跳回到3（即next[8]），这里用的是p作为已经比对过全部匹配的指向模式串的指针，而如果直接无法匹配，则直接跳回到原点（即0）。 那么在AC自动机里，这个原点便是trie的根节点，用fail边起到和kmp中next数组一样的效果，从一棵枝条跳到另一棵枝条上，保证了从根节点到fail[p]这段路和刚刚走过来这段路是完全匹配的。这样就大大减少了时间。 AC代码Click_To_View_Code 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152#include&lt;stdio.h&gt;#include&lt;queue&gt;#define N 1000010using namespace std;int trie[N][27],tot;int fail[N],end[N];queue&lt;int&gt;Q;char a[N];void push()&#123;//把每个模式串加入字典树中 int i,p,now=0; for(i=0;a[i]!='\0';i++)&#123; p=a[i]-'a'; if(!trie[now][p])trie[now][p]=++tot; now=trie[now][p]; &#125; end[now]++;//以now为结尾的单词数&#125;void build()&#123;//建立fail边和辅助边 int i,v; for(i=0;i&lt;26;i++)if(trie[0][i])Q.push(trie[0][i]); while(!Q.empty())&#123; v=Q.front();Q.pop(); for(i=0;i&lt;26;i++)&#123; if(trie[v][i])fail[trie[v][i]]=trie[fail[v]][i],Q.push(trie[v][i]); //这个节点的失配节点指向上个节点失配节点的对应trie节点 //也就是在kmp算法中用的next[p]和p+1，把它看成一个链好理解一些 else trie[v][i]=trie[fail[v]][i]; //建立辅助边，防止遗漏（实质上建立了trie图） &#125; &#125;&#125;int query()&#123; int i,j,ans=0,now=0; for(i=0;a[i]!='\0';i++)&#123; now=trie[now][a[i]-'a']; for(j=now;j&amp;&amp;~end[j];j=fail[j])&#123; //顺着fail边走，防止遗漏与当前匹配串后缀相同的模式串 ans+=end[j]; end[j]=-1;//标记走过了，香港新闻产业剪枝 &#125; &#125; return ans;&#125;int main()&#123; int i,n; scanf("%d",&amp;n); for(i=0;i&lt;n;i++)scanf("%s",a),push(); build(); scanf("%s",a); printf("%d",query()); return 0;&#125; P3796 【模板】AC自动机（加强版）（完成时间：2018.12.06） 题目描述有N个由小写字母组成的模式串以及一个文本串T。每个模式串可能会在文本串中出现多次。你需要找出哪些模式串在文本串T中出现的次数最多。 解题思路魔改简单版。 end[i]表示以i结尾的单词标号。query一次后对答案排序，输出即可。 AC代码Click_To_View_Code 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970#include&lt;stdio.h&gt;#include&lt;queue&gt;#include&lt;string.h&gt;#include&lt;algorithm&gt;#define N 100010using namespace std;struct Ans&#123; int num,i; bool operator&lt;(const Ans&amp;x)const&#123; return num&gt;x.num||(num==x.num&amp;&amp;i&lt;x.i); &#125;&#125;ans[500];char a[160][80];char b[N*10];int trie[26][N],end[N],fail[N],tot;queue&lt;int&gt;Q;void push(int x)&#123; int i,now=0; for(i=0;a[x][i]!='\0';i++)&#123; int p=a[x][i]-'a'; if(!trie[p][now])trie[p][now]=++tot; now=trie[p][now]; &#125; end[now]=x;&#125;void build()&#123; int i,now=0,v; for(i=0;i&lt;26;i++)if(trie[i][0])Q.push(trie[i][0]),fail[trie[i][0]]=0; while(!Q.empty())&#123; v=Q.front();Q.pop(); for(i=0;i&lt;26;i++)&#123; if(trie[i][v])&#123; fail[trie[i][v]]=trie[i][fail[v]]; Q.push(trie[i][v]); &#125;else trie[i][v]=trie[i][fail[v]]; &#125; &#125;&#125;void query()&#123; int i,j,now=0; for(i=0;b[i]!='\0';i++)&#123; now=trie[b[i]-'a'][now]; for(j=now;j;j=fail[j])ans[end[j]].num++; &#125;&#125;int main()&#123; int i,n; while(~scanf("%d",&amp;n)&amp;&amp;n)&#123; for(i=1;i&lt;=n;i++)&#123; scanf("%s",a[i]); ans[i].i=i; ans[i].num=0; push(i); &#125; build(); scanf("%s",b); query(); sort(ans+1,ans+1+n); printf("%d\n%s\n",ans[1].num,a[ans[1].i]); for(i=2;i&lt;=n;i++)&#123; if(ans[i].num^ans[i-1].num)break; printf("%s\n",a[ans[i].i]); &#125; memset(trie,0,sizeof(trie)); memset(end,0,sizeof(end)); memset(fail,0,sizeof(fail)); tot=0; &#125; return 0;&#125; P2444 [POI2000]病毒（完成时间：2018.12.06） 题目描述如果某段代码中不存在任何一段病毒代码，那么我们就称这段代码是安全的。现在委员会已经找出了所有的病毒代码段，试问，是否存在一个无限长的安全的二进制代码。 例如，如果{011, 11, 00000}为病毒代码段，那么一个可能的无限长安全代码就是010101…。如果{01, 11, 000000}为病毒代码段，那么就不存在一个无限长的安全代码。 请写一个程序，读入病毒代码，判断是否存在一个无限长的安全代码。 解题思路建立trie图，进行深搜，出现过的或者具有相同后缀的（fail边指向的）01串都不可以经过，如果能成一个环，那么就是一个可行的解。 AC代码Click_To_View_Code 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152#include&lt;stdio.h&gt;#include&lt;queue&gt;#include&lt;stdlib.h&gt;using namespace std;#define N 2019&lt;&lt;5int trie[2][N],fail[N],vis[N];int rd[N];//记录路径经过的节点 int stop[N];//记录不可以走的点 int n,tot;char s[N];void push()&#123; int i,now=0; for(i=0;s[i];i++)&#123; if(!trie[s[i]-'0'][now])trie[s[i]-'0'][now]=++tot; now=trie[s[i]-'0'][now]; &#125; stop[now]=1;&#125;queue&lt;int&gt;Q;void build()&#123; int i,t,j; for(i=0;i&lt;2;i++)if(trie[i][0])Q.push(trie[i][0]); while(!Q.empty())&#123; t=Q.front();Q.pop(); for(j=0;j&lt;2;j++)&#123; if(trie[j][t])&#123; fail[trie[j][t]]=trie[j][fail[t]]; Q.push(trie[j][t]); if(stop[trie[j][fail[t]]])stop[trie[j][t]]=1; &#125;else trie[j][t]=trie[j][fail[t]]; &#125; &#125;&#125;void dfs(int x)&#123; if(rd[x])&#123; printf("TAK"); exit(0); &#125; if(stop[x]||vis[x])return; vis[x]=rd[x]=1; dfs(trie[0][x]);dfs(trie[1][x]); rd[x]=0;&#125;int main()&#123; int i; scanf("%d",&amp;n); for(i=0;i&lt;n;i++)scanf("%s",s),push(); build(); dfs(0); printf("NIE"); return 0;&#125; 回文串P3805 【模板】manacher算法 （完成时间：2018.12.10） 题目描述给出一个只由小写英文字符组成的字符串S，求S中最长回文串的长度。 解题思路马拉车算法的思路是，遍历字符串，找到目前结束点最靠后的回文串，根据这个回文串的对称性，缩短时间。然后为了避免讨论回文串中包含奇数与偶数个元素，加入一个’#‘使最终回文串必为奇数。 AC代码Click_To_View_Code 123456789101112131415161718192021222324#include&lt;stdio.h&gt;#define N 22000010char c,a[N]=&#123;'#'&#125;;int len[N],cnt=1;int min(int a,int b)&#123;return a&gt;b?b:a;&#125;void read()&#123;while((c=getchar())&gt;='a'&amp;&amp;c&lt;='z')a[cnt++]=c,a[cnt++]='#';&#125;//读入、构造，如"aaa"变为"#a#a#a" int main()&#123; int i,mr=0,mid,ans=0; //mr：maxright，当前回文串结束点最靠右的位置 read(); for(i=1;i&lt;cnt;i++)&#123; if(i&lt;mr)len[i]=min(len[2*mid-i],mr-i); //当i在mr左边时，根据对称性判断其最短回文串长度 // ---|--^------|-------^--| // --- 2mid-i mid i mr else len[i]=1;//否则初始化为1 while(a[i+len[i]]&amp;&amp;a[i+len[i]]==a[i-len[i]])len[i]++;//向左右两边拓展 if(i+len[i]&gt;mr)mr=i+len[i],mid=i;//更新mid，mr if(ans&lt;len[i]-1)ans=len[i]-1;//更新ans &#125; printf("%d",ans); return 0;&#125; P1872 回文串计数（完成时间：2018.12.11） 题目描述问一个字符串中有几对互不交叉（$l \leq r&lt;L\leq R$）的回文串。 解题思路最后的答案必然是枚举每一位作为分界线时候左边回文串个数和右边回文串个数的乘积之和。这里为了避免重复，在统计个数的时候，l[i]表示从1到i-1的左边回文串总个数，r[i]表示以i开头的回文串个数。最后的答案便是\sum_{i=1}^{len}{l[i-1]*r[i]}。 跑一边马拉车，顺带差分求两边前缀和即可。注意前缀和的意义，这里调了好久。 AC代码Click_To_View_Code 123456789101112131415161718192021222324#include&lt;stdio.h&gt;#define N 4010int min(int a,int b)&#123;return a&gt;b?b:a;&#125;char a[N]=&#123;'#'&#125;,c;int mr,mid,len[N],L=1;long long ans,l[N],r[N]; int main()&#123; int i; while((c=getchar())&gt;='a'&amp;&amp;c&lt;='z')a[L++]=c,a[L++]='#'; for(i=1;i&lt;L;i++)&#123; if(mr&gt;i)len[i]=min(len[2*mid-i],mr-i); else len[i]=1; while(a[len[i]+i]&amp;&amp;a[len[i]+i]==a[i-len[i]])len[i]++; if(i+len[i]&gt;mr)mr=len[i]+i,mid=i; l[i/2]++;l[(i+len[i])/2]--; r[(i-len[i]+1)/2]++;r[(i+1)/2]--; &#125; L&gt;&gt;=1; for(i=1;i&lt;=L;i++)l[i]+=l[i-1],r[i]+=r[i-1]; for(i=1;i&lt;=L;i++)l[i]+=l[i-1]; for(i=1;i&lt;=L;i++)ans+=l[i-1]*r[i]; printf("%lld",ans); return 0;&#125; P4555 [国家集训队]最长双回文串 （完成时间：2018.12.10） 题目描述解题思路AC代码Click_To_View_Code 12 P4987 回文项链 （完成时间：2018.12.11） 题目描述解题思路AC代码Click_To_View_Code 12 博弈论P2197 【模板】nim游戏（完成时间：2018.12.07） 题目描述解题思路AC代码Click_To_View_Code 12 P1247 取火柴游戏（完成时间：2018.12.11） 题目描述解题思路AC代码Click_To_View_Code 12 P4018 Roy&amp;October之取石子 （完成时间：2018.12.11） 题目描述解题思路AC代码Click_To_View_Code 12 P4279 [SHOI2008]小约翰的游戏（完成时间：2018.12.11） 题目描述解题思路AC代码Click_To_View_Code 12 P2599 [ZJOI2009]取石子游戏（完成时间：2018.12.12） 题目描述解题思路AC代码Click_To_View_Code 12 P2575 高手过招（完成时间：2018.12.12） 题目描述解题思路AC代码Click_To_View_Code 12 FFTP1919 【模板】A*B Problem升级版（FFT快速傅里叶）（完成时间：2018.12.13） 题目描述解题思路AC代码Click_To_View_Code 12 P3803 【模板】多项式乘法（FFT）（完成时间：2018.12.13） 题目描述解题思路AC代码Click_To_View_Code 12 P3338 [ZJOI2014]力 （完成时间：2018.12.14） 题目描述解题思路AC代码Click_To_View_Code 12 扫描线P1169 [ZJOI2007]棋盘制作 （完成时间：2018.12.14） 题目描述解题思路AC代码Click_To_View_Code 12 P2701 [USACO5.3]巨大的牛棚Big Barn （完成时间：2018.12.14） 题目描述解题思路AC代码Click_To_View_Code 12 P4147 玉蟾宫 （完成时间：2018.12.14） 题目描述解题思路AC代码Click_To_View_Code 12 汉诺塔相关P1242 新汉诺塔 （完成时间：2018.12.14） 题目描述解题思路AC代码Click_To_View_Code 12 P4285 [SHOI2008]汉诺塔（完成时间：2018.12.15） 题目描述解题思路AC代码Click_To_View_Code 12 状压DPP1896 [SCOI2005]互不侵犯（完成时间：2018.12.15） 题目描述解题思路AC代码Click_To_View_Code 12 P2051 [AHOI2009]中国象棋（完成时间：2018.12.15） 题目描述解题思路AC代码Click_To_View_Code 12 P2704 [NOI2001]炮兵阵地（完成时间：2018.12.16） 题目描述解题思路AC代码Click_To_View_Code 12 树形DPP2014 选课（完成时间：2018.12.17） 题目描述解题思路AC代码Click_To_View_Code 12 P1131 [ZJOI2007]时态同步（完成时间：2018.12.17） 题目描述解题思路AC代码Click_To_View_Code 12 P1352 没有上司的舞会（完成时间：2018.12.17） 题目描述解题思路AC代码Click_To_View_Code 12 二分图，网络流P3386 【模板】二分图匹配（完成时间：2018.12.19） 题目描述解题思路AC代码Click_To_View_Code 12 P1129 [ZJOI2007]矩阵游戏（完成时间：2018.12.24） 题目描述解题思路AC代码Click_To_View_Code 12 P1402 酒店之王（完成时间：2019.1.7） 题目描述解题思路AC代码Click_To_View_Code 12 难题·AlvinZH的青春记忆III（完成时间：2018.12.19） 题目描述解题思路AC代码Click_To_View_Code 12 基础内容填坑P2386 放苹果（完成时间：2018.12.17） 题目描述解题思路AC代码Click_To_View_Code 12 P1019 单词接龙（完成时间：2019.1.7） 题目描述解题思路AC代码Click_To_View_Code 12 P1309 瑞士轮（完成时间：2018.12.17） 题目描述解题思路AC代码Click_To_View_Code 12 P1108 低价购买（完成时间：2018.12.23） 题目描述解题思路AC代码Click_To_View_Code 12 P1282 多米诺骨牌（完成时间：2019.1.7） 题目描述解题思路AC代码Click_To_View_Code 12 P1063 能量项链（完成时间：2019.1.7） 题目描述解题思路AC代码Click_To_View_Code 12 DPP1850 换教室（完成时间：2019.1.26） 题目描述解题思路AC代码Click_To_View_Code 12 P2577 [ZJOI2005]午餐（完成时间：2019.1.9） 题目描述解题思路AC代码Click_To_View_Code 12 P2308 添加括号（完成时间：2019.1.9） 题目描述解题思路AC代码Click_To_View_Code 12 数论P5091 【模板】欧拉定理（完成时间：2018.12.28） 题目描述解题思路AC代码Click_To_View_Code 12 P4139 上帝与集合的正确用法（完成时间：2018.12.30） 题目描述解题思路AC代码Click_To_View_Code 12 P4525 【模板】自适应辛普森法（完成时间：2018.12.25）题目描述解题思路AC代码 P4526 【模板】自适应辛普森法2（完成时间：2018.12.26） 题目描述解题思路AC代码Click_To_View_Code 12 P2613 【模板】有理数取余（完成时间：2018.12.29） 题目描述解题思路AC代码Click_To_View_Code 12 线段树，树状数组P3372 【模板】线段树 1（完成时间：2019.1.7） 题目描述解题思路AC代码Click_To_View_Code 12 P3373 【模板】线段树 2（完成时间：2019.1.8） 题目描述解题思路AC代码Click_To_View_Code 12 P3374 【模板】树状数组 1（完成时间：2019.1.8） 题目描述解题思路AC代码Click_To_View_Code 12 P3368 【模板】树状数组 2（完成时间：2019.1.8） 题目描述解题思路AC代码Click_To_View_Code 12 P2023 [AHOI2009]维护序列（完成时间：2019.1.8） 题目描述解题思路AC代码Click_To_View_Code 12 P5057 [CQOI2006]简单题 （完成时间：2019.1.8） 题目描述解题思路AC代码Click_To_View_Code 12 P2574 XOR的艺术 （完成时间：2019.1.8） 题目描述解题思路AC代码Click_To_View_Code 12 P3834 【模板】可持久化线段树 1（主席树）（完成时间：2019.1.26） 题目描述解题思路AC代码Click_To_View_Code 12 P3919 【模板】可持久化数组（可持久化线段树/平衡树）（完成时间：2019.1.26） 题目描述解题思路AC代码Click_To_View_Code 12 差分，前缀和P1083 借教室（完成时间：2019.1.19） 题目描述解题思路AC代码Click_To_View_Code 12 树链剖分P3384 【模板】树链剖分（完成时间：2019.1.19） 题目描述解题思路AC代码Click_To_View_Code 12 平衡树P3369 【模板】普通平衡树（完成时间：2019.1.28） 题目描述解题思路AC代码Click_To_View_Code 12 P3391 【模板】文艺平衡树（Splay）（完成时间：2019.1.29） 题目描述解题思路AC代码Click_To_View_Code 12 P3835 【模板】可持久化平衡树（完成时间：2019.1.29） 题目描述解题思路AC代码Click_To_View_Code 12 P5055 【模板】可持久化文艺平衡树（完成时间：2019.1.31） 题目描述解题思路AC代码Click_To_View_Code 12]]></content>
      <tags>
        <tag>成长</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[P2467 [SDOI2010]地精部落 题解（DP）]]></title>
    <url>%2F2019%2F03%2F10%2FP2467%2F</url>
    <content type="text"><![CDATA[题目链接P2467 [SDOI2010]地精部落 解题思路神仙题（？） 我太渣了一个多小时才想出来这题怎么做 第一感就是排列组合题目。然而怎么也想不出来正确的思路。 然后突然想到这个题好像是在DP练习场里头的，于是就做出来了。 设$f[i]$表示填到第$i$个数的时候，默认第一个数是山峰的时候（山谷也行，一样的）有多少种方法。显然，$12345$的方法和$14579$的方法种数是相同的，所以说$f[i]$也代表$i$个互不相同的数填成波浪形有多少种方法。 然后从$1$到$n$递推，枚举$i$这个数塞到第$j$个位置，也就是把前$i-1$个数弄成波浪形，后$i-j$个数弄成波浪形，把$i-1$个数分成$j-1$个和$i-j$个的两组一共有$c[i-1][j-1]$种方法，故有$f[i]= \sum_{j=1}^i f[j-1]·f[i-j]·c[i-1][j-1]$。 AC代码12345678910111213141516171819#include&lt;stdio.h&gt;long long n,p,f[4210],c[4210][4210]; int main()&#123; int i,j; f[0]=1; scanf("%lld%lld",&amp;n,&amp;p); for(i=0;i&lt;=n;i++)c[i][0]=1; for(i=1;i&lt;=n;i++)&#123; for(j=1;j&lt;=i;j++)&#123; if(j%2)&#123; f[i]+=f[j-1]*f[i-j]%p*c[i-1][j-1]%p; f[i]%=p; &#125; c[i][j]=(c[i-1][j]+c[i-1][j-1])%p; &#125; &#125; printf("%lld",(f[n]&lt;&lt;1)%p); return 0;&#125; 滚动数组优化一下组合数：12345678910111213141516171819#include&lt;stdio.h&gt;long long n,p,f[4210],c[2][4210]; int main()&#123; int i,j,q=0; f[0]=c[0][0]=c[1][0]=1; scanf("%lld%lld",&amp;n,&amp;p); for(i=1;i&lt;=n;i++)&#123; q^=1; for(j=1;j&lt;=i;j++)&#123; if(j%2)&#123; f[i]+=f[j-1]*f[i-j]%p*c[q^1][j-1]%p; f[i]%=p; &#125; c[q][j]=(c[q^1][j]+c[q^1][j-1])%p; &#125; &#125; printf("%lld",(f[n]&lt;&lt;1)%p); return 0;&#125;]]></content>
      <tags>
        <tag>DP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记录一枚蒟蒻的成长]]></title>
    <url>%2F2019%2F03%2F10%2F%E8%AE%B0%E5%BD%95%E4%B8%80%E6%9E%9A%E8%92%9F%E8%92%BB%E7%9A%84%E6%88%90%E9%95%BF%2F</url>
    <content type="text"><![CDATA[没啥好看的，就是篇日记。 2018.06.30 怀着一颗好奇的心从MOOC学习C 2018.07.09 加入敲键盘行列，自此迈进了一个无底深渊（ 2018.07.10午 第一道橙题过河卒 2018.07.10晚 第一道黄题八皇后 2018.08.03 第一道绿题八百标兵奔北坡 2018.08.05 第一道蓝题余数求和 2018.08.07 第二道蓝题求正整数 2018.08.08 受扫雷游戏启发，自制第一个游戏–扫雷 2018.08.09-08.10 自制简陋实数四则运算计算器 2018.08.23 第三道蓝题仪仗队 2018.09.12第四道蓝题国王游戏 2018.09.26第五道蓝题靶型数独 2018.09.28第六道蓝题幻想迷宫 2018.09.30第七道蓝题创意吃鱼法， 第八道蓝题城堡 2018.10.03第一道紫题皇后游戏 2018.10.11第二道紫题房间最短路问题 2018.11.7第三道紫题方格取数问题 2018.11.12第四道紫题小Z的 k 紧凑数 2018.11.13第五道紫题000001 2018.11.20第六道紫题最长公共子序列 2018.11.21第七道紫题平衡点 2018.11.24第八道紫题最长不下降子序列问题 2018.12.9第九道紫题生成字符串 2018.12.10第十道紫题最长双回文串 2018.12.11第十一道紫题P1872 回文串计数，第十二道紫题P4987 回文项链，第十三道紫题P4279 [SHOI2008]小约翰的游戏 2018.12.12第十四道紫题P2599 [ZJOI2009]取石子游戏 2018.12.13第十五道紫题P3803 【模板】多项式乘法（FFT） 2018.12.14第十六道紫题P3338 [ZJOI2014]力 2018.12.15第十七道紫题P2051 [AHOI2009]中国象棋，第十八道紫题P4285 [SHOI2008]汉诺塔 2018.12.25第十九道紫题P4525 【模板】自适应辛普森法1 2018.12.27第二十道紫题P4526 【模板】自适应辛普森法2 2018.12.28第二十一道紫题P5091 【模板】欧拉定理 2018.12.30第二十二道紫题P4139 上帝与集合的正确用法 2019.1.5第二十三道紫题P2529 [SHOI2001]击鼓传花，第二十四道紫题P2508 [HAOI2008]圆上的整点 2019.1.6第二十五道紫题CF1091D New Year and the Permutation Concatenation，第二十六道紫题CF1084B Kvass and the Fair Nut，第一道黑题CF1091E New Year and the Acquaintance Estimation，第二道黑题CF1091F New Year and the Mallard Expedition 2019.1.31第三道黑题P5055 【模板】可持久化文艺平衡树 2019.2.27第四道黑题P2783 有机化学之神偶尔会做作弊 2019.3.3第五道黑题P1763 蓄水池 2019.3.6第六道黑题P4847 银河英雄传说V2 2019.3.8 洛谷$AC500$ 路还在继续…… 青春如酒，成长正酣……]]></content>
      <tags>
        <tag>成长</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019.2-2019.3 TO-DO LIST]]></title>
    <url>%2F2019%2F03%2F10%2F2019.2-2019.3%20to-do%20list%2F</url>
    <content type="text"><![CDATA[做自己喜欢的事是自由，喜欢自己做的事是幸福。 算法模板复习 P3384 【模板】树链剖分 P3379 【模板】最近公共祖先（LCA） P3375 【模板】KMP字符串匹配 P3366 【模板】最小生成树 P5091 【模板】欧拉定理 P3835 【模板】可持久化平衡树 P3865 【模板】ST表 P3805 【模板】manacher算法 P3808 【模板】AC自动机（简单版） P2742 【模板】二维凸包 / [USACO5.1]圈奶牛Fencing the Cows P1919 【模板】A*B Problem升级版（FFT快速傅里叶） 2018.12-2019.1 TO-DO LIST 题解集锐意咕咕中.jpg DPP2723 丑数 Humble Numbers （完成时间：2019.3.1）P2725 邮票 Stamps （完成时间：2019.3.1）P1021 邮票面值设计 （完成时间：2019.3.1）P1070 道路游戏（完成时间：2019.3.2）P2558 [AHOI2002]网络传输（完成时间：2019.3.2）blog2（完成时间：2019.3.2）P2831 愤怒的小鸟（完成时间：2019.3.2）P3160 [CQOI2012]局部极小值 （完成时间：2019.3.3）P1763 蓄水池 （完成时间：2019.3.3）P1122 最大子树和（完成时间：2019.3.10）UVA1292 Strategic game（完成时间：2019.3.10）P2607 [ZJOI2008]骑士（完成时间：2019.3.10）P2467 [SDOI2010]地精部落（完成时间：2019.3.10）P2059 [JLOI2013]卡牌游戏（完成时间：2019.3.10） 数据结构SPFASPFA（完成时间：2019.2.17）P1841 [JSOI2007]重要的城市（完成时间：2019.2.17）P3385 【模板】负环（完成时间：2019.2.17） 差分约束P1993 小K的农场（完成时间：2019.2.25）P1250 种树)（完成时间：2019.2.25）P3084 [USACO13OPEN]照片Photo)（完成时间：2019.2.26） Tarjan，强连通分量P2194 HXY烧情侣（完成时间：2019.2.27）P3388 【模板】割点（割顶）（完成时间：2019.2.26）P2169 正则表达式（完成时间：2019.2.27）P3387 【模板】缩点（完成时间：2019.2.27）P2783 有机化学之神偶尔会做作弊（完成时间：2019.2.27）P1726 上白泽慧音（完成时间：2019.2.27）P2149 [SDOI2009]Elaxia的路线P1345 [USACO5.4]奶牛的电信Telecowmunication（完成时间：2019.2.28）P2341 [HAOI2006]受欢迎的牛（完成时间：2019.2.28）P3469 [POI2008]BLO-Blockade（完成时间：2019.2.28）P3119 [USACO15JAN]草鉴定Grass Cownoisseur （完成时间：2019.3.1）P2746 [USACO5.3]校园网Network of Schools（完成时间：2019.3.1） 并查集P1197 [JSOI2008]星球大战（完成时间：2019.2.6）P1196 [NOI2002]银河英雄传说（完成时间：2019.2.23） 堆P1801 黑匣子_NOI导刊2010提高（06）（完成时间：2019.2.28）P2278 [HNOI2003]操作系统（完成时间：2019.2.28）P1484 种树（完成时间：2019.3.1） 线段树，树状数组P1198 [JSOI2008]最大数（完成时间：2019.2.6）P2161 [SHOI2009]会场预约（完成时间：2019.2.6） 左偏树P3377 【模板】左偏树（可并堆）（完成时间：2019.3.5）P2713 罗马游戏 （完成时间：2019.3.5）P1456 Monkey King（完成时间：2019.3.5） 平衡树P4847 银河英雄传说V2（完成时间：2019.3.6） 网络流，二分图匈牙利算法（完成时间：2019.2.18）P1640 [SCOI2010]连续攻击游戏（完成时间：2019.2.18）P2764 最小路径覆盖问题（完成时间：2019.2.21）P1963 [NOI2009]变换序列（完成时间：2019.2.21）P2765 魔术球问题（完成时间：2019.2.21）P2763 试题库问题（完成时间：2019.2.22）P2526 [SHOI2001]小狗散步（完成时间：2019.2.22）P2756 飞行员配对方案问题 （完成时间：2019.2.23）P3381 【模板】最小费用最大流 （完成时间：2019.2.24）P2055 [ZJOI2009]假期的宿舍)（完成时间：2019.2.26） 基础P1268 树的重量（完成时间：2019.2.1）P1525 关押罪犯（完成时间：2019.2.1）P1983 车站分级（完成时间：2019.2.1）P2724 联系 Contact （完成时间：2019.3.1）P1092 虫食算（完成时间：2019.3.2） 怨念P3171 [CQOI2015]网络吞吐量 （完成时间：2019.3.7）P4847 银河英雄传说V2 （完成时间：2019.3.7）CF923B Producing Snow（完成时间：2019.3.6） 某些神奇的TODO名单P4777 【模板】扩展中国剩余定理（EXCRT）（完成时间：2019.2.22） 某些神奇的地方最短路+差分约束好博题解库洛谷日报LaTeX图论题画图处大佬]]></content>
      <tags>
        <tag>成长</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[My first blog]]></title>
    <url>%2F2019%2F03%2F09%2Fmy-first-blog%2F</url>
    <content type="text"><![CDATA[啦啦啦，换到新的blog啦！ 原博客停用 标题一标题二标题三标题四标题五标题六 这是一段引用 123int mian()&#123;//这是一段代码 retrun 0;&#125; 这是一个链接 $\sum_{k|((1&lt;&lt;k)\&amp;S==0)}^{} {f[i-1][S-(1&lt;]}$ 嗯嗯 诶诶诶 黑体 斜体 a 道路千万条 你是第一条 第一条 -.- -。- 第二条~ 第三条 233 322 &lt;addr&gt; 233 $$ x^{y^z}=(1+{\rm e}^x)^{-2xy^w} $$ $$ \sideset{^1_2}{^3_4}\bigotimes $$ $$\frac{a-1}{b-1} \quad and \quad {a+1\over b+1}$$ $$\sqrt{2} \quad and \quad \sqrt[n]{3}$$ $$\vec{a} \cdot \vec{b}=0$$ $$\overleftarrow{xy} \quad and \quad \overleftrightarrow{xy} \quad and \quad \overrightarrow{xy}$$ $$ \lim_{n \to +\infty} \frac{1}{n(n+1)}$$ $$\sum_{i=1}^n \frac{1}{i^2} \quad and \quad \prod_{i=1}^n \frac{1}{i^2} \quad and \quad \bigcup_{i=1}^{2} R$$ $\smash{\displaystyle\max_{0 \leq q \leq n-1}} f(q) \le n$ $f(x + \epsilon) \approx f(x) + f’(x) \epsilon + \mathcal{O}(\epsilon^2).$ $\text{d}x$ $\lim_{n \to +\infty}{1^n}=1$]]></content>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
</search>
